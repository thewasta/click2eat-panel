name: Docker CI/CD

on:
  pull_request:
    branches:
      - release

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: click2eat
  IMAGE_TAG: prod

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: supa
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.12.2'

      - name: Install dependencies
        run: npm ci

#      - name: Run tests
#        run: npm test

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/app/app.dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Verify image push
        run: |
          docker pull ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          if [ $? -ne 0 ]; then
            echo "Failed to pull the image. It may not have been pushed correctly."
            exit 1
          fi

  deploy:
    needs: build-and-push
    runs-on: [ self-hosted, supa ]
    environment: supa

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy with docker-compose
        env:
          DOTENV_KEY: ${{ secrets.DOTENV_KEY_PROD }}
        run: |
          docker compose -f docker-compose.pro.yaml pull
          docker compose -f docker-compose.pro.yaml up -d --remove-orphans

      - name: Cleanup old images
        run: docker image prune -af
